#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1434
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharePointLearningKit.Services
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="SharePointLearningKit")]
	public partial class SLKAssignmentsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAssignmentItem(AssignmentItem instance);
    partial void UpdateAssignmentItem(AssignmentItem instance);
    partial void DeleteAssignmentItem(AssignmentItem instance);
    partial void InsertAttemptItem(AttemptItem instance);
    partial void UpdateAttemptItem(AttemptItem instance);
    partial void DeleteAttemptItem(AttemptItem instance);
    partial void InsertActivityAttemptItem(ActivityAttemptItem instance);
    partial void UpdateActivityAttemptItem(ActivityAttemptItem instance);
    partial void DeleteActivityAttemptItem(ActivityAttemptItem instance);
    partial void InsertUserItem(UserItem instance);
    partial void UpdateUserItem(UserItem instance);
    partial void DeleteUserItem(UserItem instance);
    partial void InsertActivityPackageItem(ActivityPackageItem instance);
    partial void UpdateActivityPackageItem(ActivityPackageItem instance);
    partial void DeleteActivityPackageItem(ActivityPackageItem instance);
    partial void InsertPackageItem(PackageItem instance);
    partial void UpdatePackageItem(PackageItem instance);
    partial void DeletePackageItem(PackageItem instance);
    partial void InsertPackageFormat(PackageFormat instance);
    partial void UpdatePackageFormat(PackageFormat instance);
    partial void DeletePackageFormat(PackageFormat instance);
    partial void InsertLearnerAssignmentItem(LearnerAssignmentItem instance);
    partial void UpdateLearnerAssignmentItem(LearnerAssignmentItem instance);
    partial void DeleteLearnerAssignmentItem(LearnerAssignmentItem instance);
    #endregion
				
		public SLKAssignmentsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SLKAssignmentsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SLKAssignmentsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SLKAssignmentsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AssignmentItem> AssignmentItems
		{
			get
			{
				return this.GetTable<AssignmentItem>();
			}
		}
		
		public System.Data.Linq.Table<AttemptItem> AttemptItems
		{
			get
			{
				return this.GetTable<AttemptItem>();
			}
		}
		
		public System.Data.Linq.Table<ActivityAttemptItem> ActivityAttemptItems
		{
			get
			{
				return this.GetTable<ActivityAttemptItem>();
			}
		}
		
		public System.Data.Linq.Table<UserItem> UserItems
		{
			get
			{
				return this.GetTable<UserItem>();
			}
		}
		
		public System.Data.Linq.Table<ActivityPackageItem> ActivityPackageItems
		{
			get
			{
				return this.GetTable<ActivityPackageItem>();
			}
		}
		
		public System.Data.Linq.Table<PackageItem> PackageItems
		{
			get
			{
				return this.GetTable<PackageItem>();
			}
		}
		
		public System.Data.Linq.Table<PackageFormat> PackageFormats
		{
			get
			{
				return this.GetTable<PackageFormat>();
			}
		}
		
		public System.Data.Linq.Table<LearnerAssignmentItem> LearnerAssignmentItems
		{
			get
			{
				return this.GetTable<LearnerAssignmentItem>();
			}
		}
	}
	
	[Table(Name="dbo.AssignmentItem")]
	public partial class AssignmentItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Guid _SPSiteGuid;
		
		private System.Guid _SPWebGuid;
		
		private System.Nullable<long> _RootActivityId;
		
		private string _NonELearningLocation;
		
		private string _Title;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.Nullable<float> _PointsPossible;
		
		private string _Description;
		
		private bool _AutoReturn;
		
		private bool _ShowAnswersToLearners;
		
		private System.Nullable<long> _CreatedBy;
		
		private System.DateTime _DateCreated;
		
		private EntitySet<LearnerAssignmentItem> _LearnerAssignmentItems;
		
		private EntityRef<UserItem> _UserItem;
		
		private EntityRef<ActivityPackageItem> _ActivityPackageItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSPSiteGuidChanging(System.Guid value);
    partial void OnSPSiteGuidChanged();
    partial void OnSPWebGuidChanging(System.Guid value);
    partial void OnSPWebGuidChanged();
    partial void OnRootActivityIdChanging(System.Nullable<long> value);
    partial void OnRootActivityIdChanged();
    partial void OnNonELearningLocationChanging(string value);
    partial void OnNonELearningLocationChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnPointsPossibleChanging(System.Nullable<float> value);
    partial void OnPointsPossibleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAutoReturnChanging(bool value);
    partial void OnAutoReturnChanged();
    partial void OnShowAnswersToLearnersChanging(bool value);
    partial void OnShowAnswersToLearnersChanged();
    partial void OnCreatedByChanging(System.Nullable<long> value);
    partial void OnCreatedByChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public AssignmentItem()
		{
			this._LearnerAssignmentItems = new EntitySet<LearnerAssignmentItem>(new Action<LearnerAssignmentItem>(this.attach_LearnerAssignmentItems), new Action<LearnerAssignmentItem>(this.detach_LearnerAssignmentItems));
			this._UserItem = default(EntityRef<UserItem>);
			this._ActivityPackageItem = default(EntityRef<ActivityPackageItem>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_SPSiteGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SPSiteGuid
		{
			get
			{
				return this._SPSiteGuid;
			}
			set
			{
				if ((this._SPSiteGuid != value))
				{
					this.OnSPSiteGuidChanging(value);
					this.SendPropertyChanging();
					this._SPSiteGuid = value;
					this.SendPropertyChanged("SPSiteGuid");
					this.OnSPSiteGuidChanged();
				}
			}
		}
		
		[Column(Storage="_SPWebGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SPWebGuid
		{
			get
			{
				return this._SPWebGuid;
			}
			set
			{
				if ((this._SPWebGuid != value))
				{
					this.OnSPWebGuidChanging(value);
					this.SendPropertyChanging();
					this._SPWebGuid = value;
					this.SendPropertyChanged("SPWebGuid");
					this.OnSPWebGuidChanged();
				}
			}
		}
		
		[Column(Storage="_RootActivityId", DbType="BigInt")]
		public System.Nullable<long> RootActivityId
		{
			get
			{
				return this._RootActivityId;
			}
			set
			{
				if ((this._RootActivityId != value))
				{
					if (this._ActivityPackageItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRootActivityIdChanging(value);
					this.SendPropertyChanging();
					this._RootActivityId = value;
					this.SendPropertyChanged("RootActivityId");
					this.OnRootActivityIdChanged();
				}
			}
		}
		
		[Column(Storage="_NonELearningLocation", DbType="NVarChar(1000)")]
		public string NonELearningLocation
		{
			get
			{
				return this._NonELearningLocation;
			}
			set
			{
				if ((this._NonELearningLocation != value))
				{
					this.OnNonELearningLocationChanging(value);
					this.SendPropertyChanging();
					this._NonELearningLocation = value;
					this.SendPropertyChanged("NonELearningLocation");
					this.OnNonELearningLocationChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_DueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[Column(Storage="_PointsPossible", DbType="Real")]
		public System.Nullable<float> PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this.OnPointsPossibleChanging(value);
					this.SendPropertyChanging();
					this._PointsPossible = value;
					this.SendPropertyChanged("PointsPossible");
					this.OnPointsPossibleChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_AutoReturn", DbType="Bit NOT NULL")]
		public bool AutoReturn
		{
			get
			{
				return this._AutoReturn;
			}
			set
			{
				if ((this._AutoReturn != value))
				{
					this.OnAutoReturnChanging(value);
					this.SendPropertyChanging();
					this._AutoReturn = value;
					this.SendPropertyChanged("AutoReturn");
					this.OnAutoReturnChanged();
				}
			}
		}
		
		[Column(Storage="_ShowAnswersToLearners", DbType="Bit NOT NULL")]
		public bool ShowAnswersToLearners
		{
			get
			{
				return this._ShowAnswersToLearners;
			}
			set
			{
				if ((this._ShowAnswersToLearners != value))
				{
					this.OnShowAnswersToLearnersChanging(value);
					this.SendPropertyChanging();
					this._ShowAnswersToLearners = value;
					this.SendPropertyChanged("ShowAnswersToLearners");
					this.OnShowAnswersToLearnersChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="BigInt")]
		public System.Nullable<long> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._UserItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[Association(Name="AssignmentItem_LearnerAssignmentItem1", Storage="_LearnerAssignmentItems", OtherKey="AssignmentId")]
		public EntitySet<LearnerAssignmentItem> LearnerAssignmentItems
		{
			get
			{
				return this._LearnerAssignmentItems;
			}
			set
			{
				this._LearnerAssignmentItems.Assign(value);
			}
		}
		
		[Association(Name="UserItem_AssignmentItem", Storage="_UserItem", ThisKey="CreatedBy", IsForeignKey=true)]
		public UserItem UserItem
		{
			get
			{
				return this._UserItem.Entity;
			}
			set
			{
				UserItem previousValue = this._UserItem.Entity;
				if (((previousValue != value) 
							|| (this._UserItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserItem.Entity = null;
						previousValue.AssignmentItems.Remove(this);
					}
					this._UserItem.Entity = value;
					if ((value != null))
					{
						value.AssignmentItems.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<long>);
					}
					this.SendPropertyChanged("UserItem");
				}
			}
		}
		
		[Association(Name="ActivityPackageItem_AssignmentItem", Storage="_ActivityPackageItem", ThisKey="RootActivityId", IsForeignKey=true)]
		public ActivityPackageItem ActivityPackageItem
		{
			get
			{
				return this._ActivityPackageItem.Entity;
			}
			set
			{
				ActivityPackageItem previousValue = this._ActivityPackageItem.Entity;
				if (((previousValue != value) 
							|| (this._ActivityPackageItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityPackageItem.Entity = null;
						previousValue.AssignmentItems.Remove(this);
					}
					this._ActivityPackageItem.Entity = value;
					if ((value != null))
					{
						value.AssignmentItems.Add(this);
						this._RootActivityId = value.Id;
					}
					else
					{
						this._RootActivityId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ActivityPackageItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LearnerAssignmentItems(LearnerAssignmentItem entity)
		{
			this.SendPropertyChanging();
			entity.AssignmentItem = this;
		}
		
		private void detach_LearnerAssignmentItems(LearnerAssignmentItem entity)
		{
			this.SendPropertyChanging();
			entity.AssignmentItem = null;
		}
	}
	
	[Table(Name="dbo.AttemptItem")]
	public partial class AttemptItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _LearnerId;
		
		private long _RootActivityId;
		
		private int _CompletionStatus;
		
		private System.Nullable<long> _CurrentActivityId;
		
		private System.Nullable<long> _SuspendedActivityId;
		
		private long _PackageId;
		
		private int _AttemptStatus;
		
		private System.Nullable<System.DateTime> _FinishedTimestamp;
		
		private bool _LogDetailSequencing;
		
		private bool _LogFinalSequencing;
		
		private bool _LogRollup;
		
		private System.Nullable<System.DateTime> _StartedTimestamp;
		
		private int _SuccessStatus;
		
		private System.Nullable<float> _TotalPoints;
		
		private System.Nullable<long> _LearnerAssignmentId;
		
		private EntitySet<ActivityAttemptItem> _ActivityAttemptItems;
		
		private EntityRef<UserItem> _UserItem;
		
		private EntityRef<ActivityPackageItem> _ActivityPackageItem;
		
		private EntityRef<ActivityPackageItem> _ActivityPackageItem1;
		
		private EntityRef<ActivityPackageItem> _ActivityPackageItem2;
		
		private EntityRef<PackageItem> _PackageItem;
		
		private EntityRef<LearnerAssignmentItem> _LearnerAssignmentItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnLearnerIdChanging(long value);
    partial void OnLearnerIdChanged();
    partial void OnRootActivityIdChanging(long value);
    partial void OnRootActivityIdChanged();
    partial void OnCompletionStatusChanging(int value);
    partial void OnCompletionStatusChanged();
    partial void OnCurrentActivityIdChanging(System.Nullable<long> value);
    partial void OnCurrentActivityIdChanged();
    partial void OnSuspendedActivityIdChanging(System.Nullable<long> value);
    partial void OnSuspendedActivityIdChanged();
    partial void OnPackageIdChanging(long value);
    partial void OnPackageIdChanged();
    partial void OnAttemptStatusChanging(int value);
    partial void OnAttemptStatusChanged();
    partial void OnFinishedTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishedTimestampChanged();
    partial void OnLogDetailSequencingChanging(bool value);
    partial void OnLogDetailSequencingChanged();
    partial void OnLogFinalSequencingChanging(bool value);
    partial void OnLogFinalSequencingChanged();
    partial void OnLogRollupChanging(bool value);
    partial void OnLogRollupChanged();
    partial void OnStartedTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnStartedTimestampChanged();
    partial void OnSuccessStatusChanging(int value);
    partial void OnSuccessStatusChanged();
    partial void OnTotalPointsChanging(System.Nullable<float> value);
    partial void OnTotalPointsChanged();
    partial void OnLearnerAssignmentIdChanging(System.Nullable<long> value);
    partial void OnLearnerAssignmentIdChanged();
    #endregion
		
		public AttemptItem()
		{
			this._ActivityAttemptItems = new EntitySet<ActivityAttemptItem>(new Action<ActivityAttemptItem>(this.attach_ActivityAttemptItems), new Action<ActivityAttemptItem>(this.detach_ActivityAttemptItems));
			this._UserItem = default(EntityRef<UserItem>);
			this._ActivityPackageItem = default(EntityRef<ActivityPackageItem>);
			this._ActivityPackageItem1 = default(EntityRef<ActivityPackageItem>);
			this._ActivityPackageItem2 = default(EntityRef<ActivityPackageItem>);
			this._PackageItem = default(EntityRef<PackageItem>);
			this._LearnerAssignmentItem = default(EntityRef<LearnerAssignmentItem>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_LearnerId", DbType="BigInt NOT NULL")]
		public long LearnerId
		{
			get
			{
				return this._LearnerId;
			}
			set
			{
				if ((this._LearnerId != value))
				{
					if (this._UserItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLearnerIdChanging(value);
					this.SendPropertyChanging();
					this._LearnerId = value;
					this.SendPropertyChanged("LearnerId");
					this.OnLearnerIdChanged();
				}
			}
		}
		
		[Column(Storage="_RootActivityId", DbType="BigInt NOT NULL")]
		public long RootActivityId
		{
			get
			{
				return this._RootActivityId;
			}
			set
			{
				if ((this._RootActivityId != value))
				{
					if (this._ActivityPackageItem1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRootActivityIdChanging(value);
					this.SendPropertyChanging();
					this._RootActivityId = value;
					this.SendPropertyChanged("RootActivityId");
					this.OnRootActivityIdChanged();
				}
			}
		}
		
		[Column(Storage="_CompletionStatus", DbType="Int NOT NULL")]
		public int CompletionStatus
		{
			get
			{
				return this._CompletionStatus;
			}
			set
			{
				if ((this._CompletionStatus != value))
				{
					this.OnCompletionStatusChanging(value);
					this.SendPropertyChanging();
					this._CompletionStatus = value;
					this.SendPropertyChanged("CompletionStatus");
					this.OnCompletionStatusChanged();
				}
			}
		}
		
		[Column(Storage="_CurrentActivityId", DbType="BigInt")]
		public System.Nullable<long> CurrentActivityId
		{
			get
			{
				return this._CurrentActivityId;
			}
			set
			{
				if ((this._CurrentActivityId != value))
				{
					if (this._ActivityPackageItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrentActivityIdChanging(value);
					this.SendPropertyChanging();
					this._CurrentActivityId = value;
					this.SendPropertyChanged("CurrentActivityId");
					this.OnCurrentActivityIdChanged();
				}
			}
		}
		
		[Column(Storage="_SuspendedActivityId", DbType="BigInt")]
		public System.Nullable<long> SuspendedActivityId
		{
			get
			{
				return this._SuspendedActivityId;
			}
			set
			{
				if ((this._SuspendedActivityId != value))
				{
					if (this._ActivityPackageItem2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSuspendedActivityIdChanging(value);
					this.SendPropertyChanging();
					this._SuspendedActivityId = value;
					this.SendPropertyChanged("SuspendedActivityId");
					this.OnSuspendedActivityIdChanged();
				}
			}
		}
		
		[Column(Storage="_PackageId", DbType="BigInt NOT NULL")]
		public long PackageId
		{
			get
			{
				return this._PackageId;
			}
			set
			{
				if ((this._PackageId != value))
				{
					if (this._PackageItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIdChanging(value);
					this.SendPropertyChanging();
					this._PackageId = value;
					this.SendPropertyChanged("PackageId");
					this.OnPackageIdChanged();
				}
			}
		}
		
		[Column(Storage="_AttemptStatus", DbType="Int NOT NULL")]
		public int AttemptStatus
		{
			get
			{
				return this._AttemptStatus;
			}
			set
			{
				if ((this._AttemptStatus != value))
				{
					this.OnAttemptStatusChanging(value);
					this.SendPropertyChanging();
					this._AttemptStatus = value;
					this.SendPropertyChanged("AttemptStatus");
					this.OnAttemptStatusChanged();
				}
			}
		}
		
		[Column(Storage="_FinishedTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinishedTimestamp
		{
			get
			{
				return this._FinishedTimestamp;
			}
			set
			{
				if ((this._FinishedTimestamp != value))
				{
					this.OnFinishedTimestampChanging(value);
					this.SendPropertyChanging();
					this._FinishedTimestamp = value;
					this.SendPropertyChanged("FinishedTimestamp");
					this.OnFinishedTimestampChanged();
				}
			}
		}
		
		[Column(Storage="_LogDetailSequencing", DbType="Bit NOT NULL")]
		public bool LogDetailSequencing
		{
			get
			{
				return this._LogDetailSequencing;
			}
			set
			{
				if ((this._LogDetailSequencing != value))
				{
					this.OnLogDetailSequencingChanging(value);
					this.SendPropertyChanging();
					this._LogDetailSequencing = value;
					this.SendPropertyChanged("LogDetailSequencing");
					this.OnLogDetailSequencingChanged();
				}
			}
		}
		
		[Column(Storage="_LogFinalSequencing", DbType="Bit NOT NULL")]
		public bool LogFinalSequencing
		{
			get
			{
				return this._LogFinalSequencing;
			}
			set
			{
				if ((this._LogFinalSequencing != value))
				{
					this.OnLogFinalSequencingChanging(value);
					this.SendPropertyChanging();
					this._LogFinalSequencing = value;
					this.SendPropertyChanged("LogFinalSequencing");
					this.OnLogFinalSequencingChanged();
				}
			}
		}
		
		[Column(Storage="_LogRollup", DbType="Bit NOT NULL")]
		public bool LogRollup
		{
			get
			{
				return this._LogRollup;
			}
			set
			{
				if ((this._LogRollup != value))
				{
					this.OnLogRollupChanging(value);
					this.SendPropertyChanging();
					this._LogRollup = value;
					this.SendPropertyChanged("LogRollup");
					this.OnLogRollupChanged();
				}
			}
		}
		
		[Column(Storage="_StartedTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartedTimestamp
		{
			get
			{
				return this._StartedTimestamp;
			}
			set
			{
				if ((this._StartedTimestamp != value))
				{
					this.OnStartedTimestampChanging(value);
					this.SendPropertyChanging();
					this._StartedTimestamp = value;
					this.SendPropertyChanged("StartedTimestamp");
					this.OnStartedTimestampChanged();
				}
			}
		}
		
		[Column(Storage="_SuccessStatus", DbType="Int NOT NULL")]
		public int SuccessStatus
		{
			get
			{
				return this._SuccessStatus;
			}
			set
			{
				if ((this._SuccessStatus != value))
				{
					this.OnSuccessStatusChanging(value);
					this.SendPropertyChanging();
					this._SuccessStatus = value;
					this.SendPropertyChanged("SuccessStatus");
					this.OnSuccessStatusChanged();
				}
			}
		}
		
		[Column(Storage="_TotalPoints", DbType="Real")]
		public System.Nullable<float> TotalPoints
		{
			get
			{
				return this._TotalPoints;
			}
			set
			{
				if ((this._TotalPoints != value))
				{
					this.OnTotalPointsChanging(value);
					this.SendPropertyChanging();
					this._TotalPoints = value;
					this.SendPropertyChanged("TotalPoints");
					this.OnTotalPointsChanged();
				}
			}
		}
		
		[Column(Storage="_LearnerAssignmentId", DbType="BigInt")]
		public System.Nullable<long> LearnerAssignmentId
		{
			get
			{
				return this._LearnerAssignmentId;
			}
			set
			{
				if ((this._LearnerAssignmentId != value))
				{
					if (this._LearnerAssignmentItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLearnerAssignmentIdChanging(value);
					this.SendPropertyChanging();
					this._LearnerAssignmentId = value;
					this.SendPropertyChanged("LearnerAssignmentId");
					this.OnLearnerAssignmentIdChanged();
				}
			}
		}
		
		[Association(Name="AttemptItem_ActivityAttemptItem", Storage="_ActivityAttemptItems", OtherKey="AttemptId")]
		public EntitySet<ActivityAttemptItem> ActivityAttemptItems
		{
			get
			{
				return this._ActivityAttemptItems;
			}
			set
			{
				this._ActivityAttemptItems.Assign(value);
			}
		}
		
		[Association(Name="UserItem_AttemptItem", Storage="_UserItem", ThisKey="LearnerId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserItem UserItem
		{
			get
			{
				return this._UserItem.Entity;
			}
			set
			{
				UserItem previousValue = this._UserItem.Entity;
				if (((previousValue != value) 
							|| (this._UserItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserItem.Entity = null;
						previousValue.AttemptItems.Remove(this);
					}
					this._UserItem.Entity = value;
					if ((value != null))
					{
						value.AttemptItems.Add(this);
						this._LearnerId = value.Id;
					}
					else
					{
						this._LearnerId = default(long);
					}
					this.SendPropertyChanged("UserItem");
				}
			}
		}
		
		[Association(Name="ActivityPackageItem_AttemptItem", Storage="_ActivityPackageItem", ThisKey="CurrentActivityId", IsForeignKey=true)]
		public ActivityPackageItem ActivityPackageItem
		{
			get
			{
				return this._ActivityPackageItem.Entity;
			}
			set
			{
				ActivityPackageItem previousValue = this._ActivityPackageItem.Entity;
				if (((previousValue != value) 
							|| (this._ActivityPackageItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityPackageItem.Entity = null;
						previousValue.AttemptItems.Remove(this);
					}
					this._ActivityPackageItem.Entity = value;
					if ((value != null))
					{
						value.AttemptItems.Add(this);
						this._CurrentActivityId = value.Id;
					}
					else
					{
						this._CurrentActivityId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ActivityPackageItem");
				}
			}
		}
		
		[Association(Name="ActivityPackageItem_AttemptItem1", Storage="_ActivityPackageItem1", ThisKey="RootActivityId", IsForeignKey=true)]
		public ActivityPackageItem ActivityPackageItem1
		{
			get
			{
				return this._ActivityPackageItem1.Entity;
			}
			set
			{
				ActivityPackageItem previousValue = this._ActivityPackageItem1.Entity;
				if (((previousValue != value) 
							|| (this._ActivityPackageItem1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityPackageItem1.Entity = null;
						previousValue.AttemptItems1.Remove(this);
					}
					this._ActivityPackageItem1.Entity = value;
					if ((value != null))
					{
						value.AttemptItems1.Add(this);
						this._RootActivityId = value.Id;
					}
					else
					{
						this._RootActivityId = default(long);
					}
					this.SendPropertyChanged("ActivityPackageItem1");
				}
			}
		}
		
		[Association(Name="ActivityPackageItem_AttemptItem2", Storage="_ActivityPackageItem2", ThisKey="SuspendedActivityId", IsForeignKey=true)]
		public ActivityPackageItem ActivityPackageItem2
		{
			get
			{
				return this._ActivityPackageItem2.Entity;
			}
			set
			{
				ActivityPackageItem previousValue = this._ActivityPackageItem2.Entity;
				if (((previousValue != value) 
							|| (this._ActivityPackageItem2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityPackageItem2.Entity = null;
						previousValue.AttemptItems2.Remove(this);
					}
					this._ActivityPackageItem2.Entity = value;
					if ((value != null))
					{
						value.AttemptItems2.Add(this);
						this._SuspendedActivityId = value.Id;
					}
					else
					{
						this._SuspendedActivityId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ActivityPackageItem2");
				}
			}
		}
		
		[Association(Name="PackageItem_AttemptItem", Storage="_PackageItem", ThisKey="PackageId", IsForeignKey=true)]
		public PackageItem PackageItem
		{
			get
			{
				return this._PackageItem.Entity;
			}
			set
			{
				PackageItem previousValue = this._PackageItem.Entity;
				if (((previousValue != value) 
							|| (this._PackageItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackageItem.Entity = null;
						previousValue.AttemptItems.Remove(this);
					}
					this._PackageItem.Entity = value;
					if ((value != null))
					{
						value.AttemptItems.Add(this);
						this._PackageId = value.Id;
					}
					else
					{
						this._PackageId = default(long);
					}
					this.SendPropertyChanged("PackageItem");
				}
			}
		}
		
		[Association(Name="LearnerAssignmentItem1_AttemptItem", Storage="_LearnerAssignmentItem", ThisKey="LearnerAssignmentId", IsForeignKey=true, DeleteRule="CASCADE")]
		public LearnerAssignmentItem LearnerAssignmentItem
		{
			get
			{
				return this._LearnerAssignmentItem.Entity;
			}
			set
			{
				LearnerAssignmentItem previousValue = this._LearnerAssignmentItem.Entity;
				if (((previousValue != value) 
							|| (this._LearnerAssignmentItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LearnerAssignmentItem.Entity = null;
						previousValue.AttemptItems.Remove(this);
					}
					this._LearnerAssignmentItem.Entity = value;
					if ((value != null))
					{
						value.AttemptItems.Add(this);
						this._LearnerAssignmentId = value.Id;
					}
					else
					{
						this._LearnerAssignmentId = default(Nullable<long>);
					}
					this.SendPropertyChanged("LearnerAssignmentItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivityAttemptItems(ActivityAttemptItem entity)
		{
			this.SendPropertyChanging();
			entity.AttemptItem = this;
		}
		
		private void detach_ActivityAttemptItems(ActivityAttemptItem entity)
		{
			this.SendPropertyChanging();
			entity.AttemptItem = null;
		}
	}
	
	[Table(Name="dbo.ActivityAttemptItem")]
	public partial class ActivityAttemptItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _AttemptId;
		
		private long _ActivityPackageId;
		
		private int _CompletionStatus;
		
		private System.Nullable<int> _AttemptCount;
		
		private System.Xml.Linq.XElement _DataModelCache;
		
		private System.Nullable<float> _EvaluationPoints;
		
		private System.Nullable<int> _Exit;
		
		private System.Nullable<int> _LessonStatus;
		
		private string _Location;
		
		private System.Nullable<float> _MinScore;
		
		private System.Nullable<float> _MaxScore;
		
		private System.Nullable<float> _ProgressMeasure;
		
		private System.Nullable<int> _RandomPlacement;
		
		private System.Nullable<float> _RawScore;
		
		private System.Nullable<float> _ScaledScore;
		
		private System.Xml.Linq.XElement _SequencingDataCache;
		
		private System.Nullable<System.DateTime> _SessionStartTimestamp;
		
		private System.Nullable<double> _SessionTime;
		
		private System.Nullable<int> _SuccessStatus;
		
		private string _SuspendData;
		
		private System.Nullable<double> _TotalTime;
		
		private EntityRef<AttemptItem> _AttemptItem;
		
		private EntityRef<ActivityPackageItem> _ActivityPackageItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAttemptIdChanging(long value);
    partial void OnAttemptIdChanged();
    partial void OnActivityPackageIdChanging(long value);
    partial void OnActivityPackageIdChanged();
    partial void OnCompletionStatusChanging(int value);
    partial void OnCompletionStatusChanged();
    partial void OnAttemptCountChanging(System.Nullable<int> value);
    partial void OnAttemptCountChanged();
    partial void OnDataModelCacheChanging(System.Xml.Linq.XElement value);
    partial void OnDataModelCacheChanged();
    partial void OnEvaluationPointsChanging(System.Nullable<float> value);
    partial void OnEvaluationPointsChanged();
    partial void OnExitChanging(System.Nullable<int> value);
    partial void OnExitChanged();
    partial void OnLessonStatusChanging(System.Nullable<int> value);
    partial void OnLessonStatusChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnMinScoreChanging(System.Nullable<float> value);
    partial void OnMinScoreChanged();
    partial void OnMaxScoreChanging(System.Nullable<float> value);
    partial void OnMaxScoreChanged();
    partial void OnProgressMeasureChanging(System.Nullable<float> value);
    partial void OnProgressMeasureChanged();
    partial void OnRandomPlacementChanging(System.Nullable<int> value);
    partial void OnRandomPlacementChanged();
    partial void OnRawScoreChanging(System.Nullable<float> value);
    partial void OnRawScoreChanged();
    partial void OnScaledScoreChanging(System.Nullable<float> value);
    partial void OnScaledScoreChanged();
    partial void OnSequencingDataCacheChanging(System.Xml.Linq.XElement value);
    partial void OnSequencingDataCacheChanged();
    partial void OnSessionStartTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnSessionStartTimestampChanged();
    partial void OnSessionTimeChanging(System.Nullable<double> value);
    partial void OnSessionTimeChanged();
    partial void OnSuccessStatusChanging(System.Nullable<int> value);
    partial void OnSuccessStatusChanged();
    partial void OnSuspendDataChanging(string value);
    partial void OnSuspendDataChanged();
    partial void OnTotalTimeChanging(System.Nullable<double> value);
    partial void OnTotalTimeChanged();
    #endregion
		
		public ActivityAttemptItem()
		{
			this._AttemptItem = default(EntityRef<AttemptItem>);
			this._ActivityPackageItem = default(EntityRef<ActivityPackageItem>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_AttemptId", DbType="BigInt NOT NULL")]
		public long AttemptId
		{
			get
			{
				return this._AttemptId;
			}
			set
			{
				if ((this._AttemptId != value))
				{
					if (this._AttemptItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttemptIdChanging(value);
					this.SendPropertyChanging();
					this._AttemptId = value;
					this.SendPropertyChanged("AttemptId");
					this.OnAttemptIdChanged();
				}
			}
		}
		
		[Column(Storage="_ActivityPackageId", DbType="BigInt NOT NULL")]
		public long ActivityPackageId
		{
			get
			{
				return this._ActivityPackageId;
			}
			set
			{
				if ((this._ActivityPackageId != value))
				{
					if (this._ActivityPackageItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityPackageIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityPackageId = value;
					this.SendPropertyChanged("ActivityPackageId");
					this.OnActivityPackageIdChanged();
				}
			}
		}
		
		[Column(Storage="_CompletionStatus", DbType="Int NOT NULL")]
		public int CompletionStatus
		{
			get
			{
				return this._CompletionStatus;
			}
			set
			{
				if ((this._CompletionStatus != value))
				{
					this.OnCompletionStatusChanging(value);
					this.SendPropertyChanging();
					this._CompletionStatus = value;
					this.SendPropertyChanged("CompletionStatus");
					this.OnCompletionStatusChanged();
				}
			}
		}
		
		[Column(Storage="_AttemptCount", DbType="Int")]
		public System.Nullable<int> AttemptCount
		{
			get
			{
				return this._AttemptCount;
			}
			set
			{
				if ((this._AttemptCount != value))
				{
					this.OnAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._AttemptCount = value;
					this.SendPropertyChanged("AttemptCount");
					this.OnAttemptCountChanged();
				}
			}
		}
		
		[Column(Storage="_DataModelCache", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement DataModelCache
		{
			get
			{
				return this._DataModelCache;
			}
			set
			{
				if ((this._DataModelCache != value))
				{
					this.OnDataModelCacheChanging(value);
					this.SendPropertyChanging();
					this._DataModelCache = value;
					this.SendPropertyChanged("DataModelCache");
					this.OnDataModelCacheChanged();
				}
			}
		}
		
		[Column(Storage="_EvaluationPoints", DbType="Real")]
		public System.Nullable<float> EvaluationPoints
		{
			get
			{
				return this._EvaluationPoints;
			}
			set
			{
				if ((this._EvaluationPoints != value))
				{
					this.OnEvaluationPointsChanging(value);
					this.SendPropertyChanging();
					this._EvaluationPoints = value;
					this.SendPropertyChanged("EvaluationPoints");
					this.OnEvaluationPointsChanged();
				}
			}
		}
		
		[Column(Name="[Exit]", Storage="_Exit", DbType="Int")]
		public System.Nullable<int> Exit
		{
			get
			{
				return this._Exit;
			}
			set
			{
				if ((this._Exit != value))
				{
					this.OnExitChanging(value);
					this.SendPropertyChanging();
					this._Exit = value;
					this.SendPropertyChanged("Exit");
					this.OnExitChanged();
				}
			}
		}
		
		[Column(Storage="_LessonStatus", DbType="Int")]
		public System.Nullable<int> LessonStatus
		{
			get
			{
				return this._LessonStatus;
			}
			set
			{
				if ((this._LessonStatus != value))
				{
					this.OnLessonStatusChanging(value);
					this.SendPropertyChanging();
					this._LessonStatus = value;
					this.SendPropertyChanged("LessonStatus");
					this.OnLessonStatusChanged();
				}
			}
		}
		
		[Column(Storage="_Location", DbType="NVarChar(1000)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[Column(Storage="_MinScore", DbType="Real")]
		public System.Nullable<float> MinScore
		{
			get
			{
				return this._MinScore;
			}
			set
			{
				if ((this._MinScore != value))
				{
					this.OnMinScoreChanging(value);
					this.SendPropertyChanging();
					this._MinScore = value;
					this.SendPropertyChanged("MinScore");
					this.OnMinScoreChanged();
				}
			}
		}
		
		[Column(Storage="_MaxScore", DbType="Real")]
		public System.Nullable<float> MaxScore
		{
			get
			{
				return this._MaxScore;
			}
			set
			{
				if ((this._MaxScore != value))
				{
					this.OnMaxScoreChanging(value);
					this.SendPropertyChanging();
					this._MaxScore = value;
					this.SendPropertyChanged("MaxScore");
					this.OnMaxScoreChanged();
				}
			}
		}
		
		[Column(Storage="_ProgressMeasure", DbType="Real")]
		public System.Nullable<float> ProgressMeasure
		{
			get
			{
				return this._ProgressMeasure;
			}
			set
			{
				if ((this._ProgressMeasure != value))
				{
					this.OnProgressMeasureChanging(value);
					this.SendPropertyChanging();
					this._ProgressMeasure = value;
					this.SendPropertyChanged("ProgressMeasure");
					this.OnProgressMeasureChanged();
				}
			}
		}
		
		[Column(Storage="_RandomPlacement", DbType="Int")]
		public System.Nullable<int> RandomPlacement
		{
			get
			{
				return this._RandomPlacement;
			}
			set
			{
				if ((this._RandomPlacement != value))
				{
					this.OnRandomPlacementChanging(value);
					this.SendPropertyChanging();
					this._RandomPlacement = value;
					this.SendPropertyChanged("RandomPlacement");
					this.OnRandomPlacementChanged();
				}
			}
		}
		
		[Column(Storage="_RawScore", DbType="Real")]
		public System.Nullable<float> RawScore
		{
			get
			{
				return this._RawScore;
			}
			set
			{
				if ((this._RawScore != value))
				{
					this.OnRawScoreChanging(value);
					this.SendPropertyChanging();
					this._RawScore = value;
					this.SendPropertyChanged("RawScore");
					this.OnRawScoreChanged();
				}
			}
		}
		
		[Column(Storage="_ScaledScore", DbType="Real")]
		public System.Nullable<float> ScaledScore
		{
			get
			{
				return this._ScaledScore;
			}
			set
			{
				if ((this._ScaledScore != value))
				{
					this.OnScaledScoreChanging(value);
					this.SendPropertyChanging();
					this._ScaledScore = value;
					this.SendPropertyChanged("ScaledScore");
					this.OnScaledScoreChanged();
				}
			}
		}
		
		[Column(Storage="_SequencingDataCache", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement SequencingDataCache
		{
			get
			{
				return this._SequencingDataCache;
			}
			set
			{
				if ((this._SequencingDataCache != value))
				{
					this.OnSequencingDataCacheChanging(value);
					this.SendPropertyChanging();
					this._SequencingDataCache = value;
					this.SendPropertyChanged("SequencingDataCache");
					this.OnSequencingDataCacheChanged();
				}
			}
		}
		
		[Column(Storage="_SessionStartTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> SessionStartTimestamp
		{
			get
			{
				return this._SessionStartTimestamp;
			}
			set
			{
				if ((this._SessionStartTimestamp != value))
				{
					this.OnSessionStartTimestampChanging(value);
					this.SendPropertyChanging();
					this._SessionStartTimestamp = value;
					this.SendPropertyChanged("SessionStartTimestamp");
					this.OnSessionStartTimestampChanged();
				}
			}
		}
		
		[Column(Storage="_SessionTime", DbType="Float")]
		public System.Nullable<double> SessionTime
		{
			get
			{
				return this._SessionTime;
			}
			set
			{
				if ((this._SessionTime != value))
				{
					this.OnSessionTimeChanging(value);
					this.SendPropertyChanging();
					this._SessionTime = value;
					this.SendPropertyChanged("SessionTime");
					this.OnSessionTimeChanged();
				}
			}
		}
		
		[Column(Storage="_SuccessStatus", DbType="Int")]
		public System.Nullable<int> SuccessStatus
		{
			get
			{
				return this._SuccessStatus;
			}
			set
			{
				if ((this._SuccessStatus != value))
				{
					this.OnSuccessStatusChanging(value);
					this.SendPropertyChanging();
					this._SuccessStatus = value;
					this.SendPropertyChanged("SuccessStatus");
					this.OnSuccessStatusChanged();
				}
			}
		}
		
		[Column(Storage="_SuspendData", DbType="NVarChar(MAX)")]
		public string SuspendData
		{
			get
			{
				return this._SuspendData;
			}
			set
			{
				if ((this._SuspendData != value))
				{
					this.OnSuspendDataChanging(value);
					this.SendPropertyChanging();
					this._SuspendData = value;
					this.SendPropertyChanged("SuspendData");
					this.OnSuspendDataChanged();
				}
			}
		}
		
		[Column(Storage="_TotalTime", DbType="Float")]
		public System.Nullable<double> TotalTime
		{
			get
			{
				return this._TotalTime;
			}
			set
			{
				if ((this._TotalTime != value))
				{
					this.OnTotalTimeChanging(value);
					this.SendPropertyChanging();
					this._TotalTime = value;
					this.SendPropertyChanged("TotalTime");
					this.OnTotalTimeChanged();
				}
			}
		}
		
		[Association(Name="AttemptItem_ActivityAttemptItem", Storage="_AttemptItem", ThisKey="AttemptId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AttemptItem AttemptItem
		{
			get
			{
				return this._AttemptItem.Entity;
			}
			set
			{
				AttemptItem previousValue = this._AttemptItem.Entity;
				if (((previousValue != value) 
							|| (this._AttemptItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AttemptItem.Entity = null;
						previousValue.ActivityAttemptItems.Remove(this);
					}
					this._AttemptItem.Entity = value;
					if ((value != null))
					{
						value.ActivityAttemptItems.Add(this);
						this._AttemptId = value.Id;
					}
					else
					{
						this._AttemptId = default(long);
					}
					this.SendPropertyChanged("AttemptItem");
				}
			}
		}
		
		[Association(Name="ActivityPackageItem_ActivityAttemptItem", Storage="_ActivityPackageItem", ThisKey="ActivityPackageId", IsForeignKey=true)]
		public ActivityPackageItem ActivityPackageItem
		{
			get
			{
				return this._ActivityPackageItem.Entity;
			}
			set
			{
				ActivityPackageItem previousValue = this._ActivityPackageItem.Entity;
				if (((previousValue != value) 
							|| (this._ActivityPackageItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityPackageItem.Entity = null;
						previousValue.ActivityAttemptItems.Remove(this);
					}
					this._ActivityPackageItem.Entity = value;
					if ((value != null))
					{
						value.ActivityAttemptItems.Add(this);
						this._ActivityPackageId = value.Id;
					}
					else
					{
						this._ActivityPackageId = default(long);
					}
					this.SendPropertyChanged("ActivityPackageItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.UserItem")]
	public partial class UserItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Key;
		
		private string _Name;
		
		private int _AudioCaptioning;
		
		private float _AudioLevel;
		
		private float _DeliverySpeed;
		
		private string _Language;
		
		private EntitySet<AssignmentItem> _AssignmentItems;
		
		private EntitySet<AttemptItem> _AttemptItems;
		
		private EntitySet<LearnerAssignmentItem> _LearnerAssignmentItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAudioCaptioningChanging(int value);
    partial void OnAudioCaptioningChanged();
    partial void OnAudioLevelChanging(float value);
    partial void OnAudioLevelChanged();
    partial void OnDeliverySpeedChanging(float value);
    partial void OnDeliverySpeedChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    #endregion
		
		public UserItem()
		{
			this._AssignmentItems = new EntitySet<AssignmentItem>(new Action<AssignmentItem>(this.attach_AssignmentItems), new Action<AssignmentItem>(this.detach_AssignmentItems));
			this._AttemptItems = new EntitySet<AttemptItem>(new Action<AttemptItem>(this.attach_AttemptItems), new Action<AttemptItem>(this.detach_AttemptItems));
			this._LearnerAssignmentItems = new EntitySet<LearnerAssignmentItem>(new Action<LearnerAssignmentItem>(this.attach_LearnerAssignmentItems), new Action<LearnerAssignmentItem>(this.detach_LearnerAssignmentItems));
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Name="[Key]", Storage="_Key", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_AudioCaptioning", DbType="Int NOT NULL")]
		public int AudioCaptioning
		{
			get
			{
				return this._AudioCaptioning;
			}
			set
			{
				if ((this._AudioCaptioning != value))
				{
					this.OnAudioCaptioningChanging(value);
					this.SendPropertyChanging();
					this._AudioCaptioning = value;
					this.SendPropertyChanged("AudioCaptioning");
					this.OnAudioCaptioningChanged();
				}
			}
		}
		
		[Column(Storage="_AudioLevel", DbType="Real NOT NULL")]
		public float AudioLevel
		{
			get
			{
				return this._AudioLevel;
			}
			set
			{
				if ((this._AudioLevel != value))
				{
					this.OnAudioLevelChanging(value);
					this.SendPropertyChanging();
					this._AudioLevel = value;
					this.SendPropertyChanged("AudioLevel");
					this.OnAudioLevelChanged();
				}
			}
		}
		
		[Column(Storage="_DeliverySpeed", DbType="Real NOT NULL")]
		public float DeliverySpeed
		{
			get
			{
				return this._DeliverySpeed;
			}
			set
			{
				if ((this._DeliverySpeed != value))
				{
					this.OnDeliverySpeedChanging(value);
					this.SendPropertyChanging();
					this._DeliverySpeed = value;
					this.SendPropertyChanged("DeliverySpeed");
					this.OnDeliverySpeedChanged();
				}
			}
		}
		
		[Column(Storage="_Language", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[Association(Name="UserItem_AssignmentItem", Storage="_AssignmentItems", OtherKey="CreatedBy")]
		public EntitySet<AssignmentItem> AssignmentItems
		{
			get
			{
				return this._AssignmentItems;
			}
			set
			{
				this._AssignmentItems.Assign(value);
			}
		}
		
		[Association(Name="UserItem_AttemptItem", Storage="_AttemptItems", OtherKey="LearnerId")]
		public EntitySet<AttemptItem> AttemptItems
		{
			get
			{
				return this._AttemptItems;
			}
			set
			{
				this._AttemptItems.Assign(value);
			}
		}
		
		[Association(Name="UserItem_LearnerAssignmentItem1", Storage="_LearnerAssignmentItems", OtherKey="LearnerId")]
		public EntitySet<LearnerAssignmentItem> LearnerAssignmentItems
		{
			get
			{
				return this._LearnerAssignmentItems;
			}
			set
			{
				this._LearnerAssignmentItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssignmentItems(AssignmentItem entity)
		{
			this.SendPropertyChanging();
			entity.UserItem = this;
		}
		
		private void detach_AssignmentItems(AssignmentItem entity)
		{
			this.SendPropertyChanging();
			entity.UserItem = null;
		}
		
		private void attach_AttemptItems(AttemptItem entity)
		{
			this.SendPropertyChanging();
			entity.UserItem = this;
		}
		
		private void detach_AttemptItems(AttemptItem entity)
		{
			this.SendPropertyChanging();
			entity.UserItem = null;
		}
		
		private void attach_LearnerAssignmentItems(LearnerAssignmentItem entity)
		{
			this.SendPropertyChanging();
			entity.UserItem = this;
		}
		
		private void detach_LearnerAssignmentItems(LearnerAssignmentItem entity)
		{
			this.SendPropertyChanging();
			entity.UserItem = null;
		}
	}
	
	[Table(Name="dbo.ActivityPackageItem")]
	public partial class ActivityPackageItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _ActivityIdFromManifest;
		
		private int _OriginalPlacement;
		
		private System.Nullable<long> _ParentActivityId;
		
		private long _PackageId;
		
		private System.Nullable<long> _PrimaryObjectiveId;
		
		private System.Nullable<long> _ResourceId;
		
		private string _PrimaryResourceFromManifest;
		
		private System.Xml.Linq.XElement _DataModelCache;
		
		private System.Nullable<float> _CompletionThreshold;
		
		private System.Nullable<bool> _Credit;
		
		private bool _HideContinue;
		
		private bool _HidePrevious;
		
		private bool _HideExit;
		
		private bool _HideAbandon;
		
		private bool _IsVisibleInContents;
		
		private string _LaunchData;
		
		private System.Nullable<float> _MasteryScore;
		
		private System.Nullable<int> _MaxAttempts;
		
		private System.Nullable<double> _MaxTimeAllowed;
		
		private string _ResourceParameters;
		
		private System.Nullable<float> _ScaledPassingScore;
		
		private System.Nullable<int> _TimeLimitAction;
		
		private string _Title;
		
		private bool _ObjectivesGlobalToSystem;
		
		private EntitySet<AssignmentItem> _AssignmentItems;
		
		private EntitySet<AttemptItem> _AttemptItems;
		
		private EntitySet<AttemptItem> _AttemptItems1;
		
		private EntitySet<AttemptItem> _AttemptItems2;
		
		private EntitySet<ActivityAttemptItem> _ActivityAttemptItems;
		
		private EntitySet<ActivityPackageItem> _ActivityPackageItems;
		
		private EntityRef<ActivityPackageItem> _ActivityPackageItem1;
		
		private EntityRef<PackageItem> _PackageItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnActivityIdFromManifestChanging(string value);
    partial void OnActivityIdFromManifestChanged();
    partial void OnOriginalPlacementChanging(int value);
    partial void OnOriginalPlacementChanged();
    partial void OnParentActivityIdChanging(System.Nullable<long> value);
    partial void OnParentActivityIdChanged();
    partial void OnPackageIdChanging(long value);
    partial void OnPackageIdChanged();
    partial void OnPrimaryObjectiveIdChanging(System.Nullable<long> value);
    partial void OnPrimaryObjectiveIdChanged();
    partial void OnResourceIdChanging(System.Nullable<long> value);
    partial void OnResourceIdChanged();
    partial void OnPrimaryResourceFromManifestChanging(string value);
    partial void OnPrimaryResourceFromManifestChanged();
    partial void OnDataModelCacheChanging(System.Xml.Linq.XElement value);
    partial void OnDataModelCacheChanged();
    partial void OnCompletionThresholdChanging(System.Nullable<float> value);
    partial void OnCompletionThresholdChanged();
    partial void OnCreditChanging(System.Nullable<bool> value);
    partial void OnCreditChanged();
    partial void OnHideContinueChanging(bool value);
    partial void OnHideContinueChanged();
    partial void OnHidePreviousChanging(bool value);
    partial void OnHidePreviousChanged();
    partial void OnHideExitChanging(bool value);
    partial void OnHideExitChanged();
    partial void OnHideAbandonChanging(bool value);
    partial void OnHideAbandonChanged();
    partial void OnIsVisibleInContentsChanging(bool value);
    partial void OnIsVisibleInContentsChanged();
    partial void OnLaunchDataChanging(string value);
    partial void OnLaunchDataChanged();
    partial void OnMasteryScoreChanging(System.Nullable<float> value);
    partial void OnMasteryScoreChanged();
    partial void OnMaxAttemptsChanging(System.Nullable<int> value);
    partial void OnMaxAttemptsChanged();
    partial void OnMaxTimeAllowedChanging(System.Nullable<double> value);
    partial void OnMaxTimeAllowedChanged();
    partial void OnResourceParametersChanging(string value);
    partial void OnResourceParametersChanged();
    partial void OnScaledPassingScoreChanging(System.Nullable<float> value);
    partial void OnScaledPassingScoreChanged();
    partial void OnTimeLimitActionChanging(System.Nullable<int> value);
    partial void OnTimeLimitActionChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnObjectivesGlobalToSystemChanging(bool value);
    partial void OnObjectivesGlobalToSystemChanged();
    #endregion
		
		public ActivityPackageItem()
		{
			this._AssignmentItems = new EntitySet<AssignmentItem>(new Action<AssignmentItem>(this.attach_AssignmentItems), new Action<AssignmentItem>(this.detach_AssignmentItems));
			this._AttemptItems = new EntitySet<AttemptItem>(new Action<AttemptItem>(this.attach_AttemptItems), new Action<AttemptItem>(this.detach_AttemptItems));
			this._AttemptItems1 = new EntitySet<AttemptItem>(new Action<AttemptItem>(this.attach_AttemptItems1), new Action<AttemptItem>(this.detach_AttemptItems1));
			this._AttemptItems2 = new EntitySet<AttemptItem>(new Action<AttemptItem>(this.attach_AttemptItems2), new Action<AttemptItem>(this.detach_AttemptItems2));
			this._ActivityAttemptItems = new EntitySet<ActivityAttemptItem>(new Action<ActivityAttemptItem>(this.attach_ActivityAttemptItems), new Action<ActivityAttemptItem>(this.detach_ActivityAttemptItems));
			this._ActivityPackageItems = new EntitySet<ActivityPackageItem>(new Action<ActivityPackageItem>(this.attach_ActivityPackageItems), new Action<ActivityPackageItem>(this.detach_ActivityPackageItems));
			this._ActivityPackageItem1 = default(EntityRef<ActivityPackageItem>);
			this._PackageItem = default(EntityRef<PackageItem>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_ActivityIdFromManifest", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ActivityIdFromManifest
		{
			get
			{
				return this._ActivityIdFromManifest;
			}
			set
			{
				if ((this._ActivityIdFromManifest != value))
				{
					this.OnActivityIdFromManifestChanging(value);
					this.SendPropertyChanging();
					this._ActivityIdFromManifest = value;
					this.SendPropertyChanged("ActivityIdFromManifest");
					this.OnActivityIdFromManifestChanged();
				}
			}
		}
		
		[Column(Storage="_OriginalPlacement", DbType="Int NOT NULL")]
		public int OriginalPlacement
		{
			get
			{
				return this._OriginalPlacement;
			}
			set
			{
				if ((this._OriginalPlacement != value))
				{
					this.OnOriginalPlacementChanging(value);
					this.SendPropertyChanging();
					this._OriginalPlacement = value;
					this.SendPropertyChanged("OriginalPlacement");
					this.OnOriginalPlacementChanged();
				}
			}
		}
		
		[Column(Storage="_ParentActivityId", DbType="BigInt")]
		public System.Nullable<long> ParentActivityId
		{
			get
			{
				return this._ParentActivityId;
			}
			set
			{
				if ((this._ParentActivityId != value))
				{
					if (this._ActivityPackageItem1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentActivityIdChanging(value);
					this.SendPropertyChanging();
					this._ParentActivityId = value;
					this.SendPropertyChanged("ParentActivityId");
					this.OnParentActivityIdChanged();
				}
			}
		}
		
		[Column(Storage="_PackageId", DbType="BigInt NOT NULL")]
		public long PackageId
		{
			get
			{
				return this._PackageId;
			}
			set
			{
				if ((this._PackageId != value))
				{
					if (this._PackageItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIdChanging(value);
					this.SendPropertyChanging();
					this._PackageId = value;
					this.SendPropertyChanged("PackageId");
					this.OnPackageIdChanged();
				}
			}
		}
		
		[Column(Storage="_PrimaryObjectiveId", DbType="BigInt")]
		public System.Nullable<long> PrimaryObjectiveId
		{
			get
			{
				return this._PrimaryObjectiveId;
			}
			set
			{
				if ((this._PrimaryObjectiveId != value))
				{
					this.OnPrimaryObjectiveIdChanging(value);
					this.SendPropertyChanging();
					this._PrimaryObjectiveId = value;
					this.SendPropertyChanged("PrimaryObjectiveId");
					this.OnPrimaryObjectiveIdChanged();
				}
			}
		}
		
		[Column(Storage="_ResourceId", DbType="BigInt")]
		public System.Nullable<long> ResourceId
		{
			get
			{
				return this._ResourceId;
			}
			set
			{
				if ((this._ResourceId != value))
				{
					this.OnResourceIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceId = value;
					this.SendPropertyChanged("ResourceId");
					this.OnResourceIdChanged();
				}
			}
		}
		
		[Column(Storage="_PrimaryResourceFromManifest", DbType="NVarChar(2000)")]
		public string PrimaryResourceFromManifest
		{
			get
			{
				return this._PrimaryResourceFromManifest;
			}
			set
			{
				if ((this._PrimaryResourceFromManifest != value))
				{
					this.OnPrimaryResourceFromManifestChanging(value);
					this.SendPropertyChanging();
					this._PrimaryResourceFromManifest = value;
					this.SendPropertyChanged("PrimaryResourceFromManifest");
					this.OnPrimaryResourceFromManifestChanged();
				}
			}
		}
		
		[Column(Storage="_DataModelCache", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement DataModelCache
		{
			get
			{
				return this._DataModelCache;
			}
			set
			{
				if ((this._DataModelCache != value))
				{
					this.OnDataModelCacheChanging(value);
					this.SendPropertyChanging();
					this._DataModelCache = value;
					this.SendPropertyChanged("DataModelCache");
					this.OnDataModelCacheChanged();
				}
			}
		}
		
		[Column(Storage="_CompletionThreshold", DbType="Real")]
		public System.Nullable<float> CompletionThreshold
		{
			get
			{
				return this._CompletionThreshold;
			}
			set
			{
				if ((this._CompletionThreshold != value))
				{
					this.OnCompletionThresholdChanging(value);
					this.SendPropertyChanging();
					this._CompletionThreshold = value;
					this.SendPropertyChanged("CompletionThreshold");
					this.OnCompletionThresholdChanged();
				}
			}
		}
		
		[Column(Storage="_Credit", DbType="Bit")]
		public System.Nullable<bool> Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		[Column(Storage="_HideContinue", DbType="Bit NOT NULL")]
		public bool HideContinue
		{
			get
			{
				return this._HideContinue;
			}
			set
			{
				if ((this._HideContinue != value))
				{
					this.OnHideContinueChanging(value);
					this.SendPropertyChanging();
					this._HideContinue = value;
					this.SendPropertyChanged("HideContinue");
					this.OnHideContinueChanged();
				}
			}
		}
		
		[Column(Storage="_HidePrevious", DbType="Bit NOT NULL")]
		public bool HidePrevious
		{
			get
			{
				return this._HidePrevious;
			}
			set
			{
				if ((this._HidePrevious != value))
				{
					this.OnHidePreviousChanging(value);
					this.SendPropertyChanging();
					this._HidePrevious = value;
					this.SendPropertyChanged("HidePrevious");
					this.OnHidePreviousChanged();
				}
			}
		}
		
		[Column(Storage="_HideExit", DbType="Bit NOT NULL")]
		public bool HideExit
		{
			get
			{
				return this._HideExit;
			}
			set
			{
				if ((this._HideExit != value))
				{
					this.OnHideExitChanging(value);
					this.SendPropertyChanging();
					this._HideExit = value;
					this.SendPropertyChanged("HideExit");
					this.OnHideExitChanged();
				}
			}
		}
		
		[Column(Storage="_HideAbandon", DbType="Bit NOT NULL")]
		public bool HideAbandon
		{
			get
			{
				return this._HideAbandon;
			}
			set
			{
				if ((this._HideAbandon != value))
				{
					this.OnHideAbandonChanging(value);
					this.SendPropertyChanging();
					this._HideAbandon = value;
					this.SendPropertyChanged("HideAbandon");
					this.OnHideAbandonChanged();
				}
			}
		}
		
		[Column(Storage="_IsVisibleInContents", DbType="Bit NOT NULL")]
		public bool IsVisibleInContents
		{
			get
			{
				return this._IsVisibleInContents;
			}
			set
			{
				if ((this._IsVisibleInContents != value))
				{
					this.OnIsVisibleInContentsChanging(value);
					this.SendPropertyChanging();
					this._IsVisibleInContents = value;
					this.SendPropertyChanged("IsVisibleInContents");
					this.OnIsVisibleInContentsChanged();
				}
			}
		}
		
		[Column(Storage="_LaunchData", DbType="NVarChar(MAX)")]
		public string LaunchData
		{
			get
			{
				return this._LaunchData;
			}
			set
			{
				if ((this._LaunchData != value))
				{
					this.OnLaunchDataChanging(value);
					this.SendPropertyChanging();
					this._LaunchData = value;
					this.SendPropertyChanged("LaunchData");
					this.OnLaunchDataChanged();
				}
			}
		}
		
		[Column(Storage="_MasteryScore", DbType="Real")]
		public System.Nullable<float> MasteryScore
		{
			get
			{
				return this._MasteryScore;
			}
			set
			{
				if ((this._MasteryScore != value))
				{
					this.OnMasteryScoreChanging(value);
					this.SendPropertyChanging();
					this._MasteryScore = value;
					this.SendPropertyChanged("MasteryScore");
					this.OnMasteryScoreChanged();
				}
			}
		}
		
		[Column(Storage="_MaxAttempts", DbType="Int")]
		public System.Nullable<int> MaxAttempts
		{
			get
			{
				return this._MaxAttempts;
			}
			set
			{
				if ((this._MaxAttempts != value))
				{
					this.OnMaxAttemptsChanging(value);
					this.SendPropertyChanging();
					this._MaxAttempts = value;
					this.SendPropertyChanged("MaxAttempts");
					this.OnMaxAttemptsChanged();
				}
			}
		}
		
		[Column(Storage="_MaxTimeAllowed", DbType="Float")]
		public System.Nullable<double> MaxTimeAllowed
		{
			get
			{
				return this._MaxTimeAllowed;
			}
			set
			{
				if ((this._MaxTimeAllowed != value))
				{
					this.OnMaxTimeAllowedChanging(value);
					this.SendPropertyChanging();
					this._MaxTimeAllowed = value;
					this.SendPropertyChanged("MaxTimeAllowed");
					this.OnMaxTimeAllowedChanged();
				}
			}
		}
		
		[Column(Storage="_ResourceParameters", DbType="NVarChar(1000)")]
		public string ResourceParameters
		{
			get
			{
				return this._ResourceParameters;
			}
			set
			{
				if ((this._ResourceParameters != value))
				{
					this.OnResourceParametersChanging(value);
					this.SendPropertyChanging();
					this._ResourceParameters = value;
					this.SendPropertyChanged("ResourceParameters");
					this.OnResourceParametersChanged();
				}
			}
		}
		
		[Column(Storage="_ScaledPassingScore", DbType="Real")]
		public System.Nullable<float> ScaledPassingScore
		{
			get
			{
				return this._ScaledPassingScore;
			}
			set
			{
				if ((this._ScaledPassingScore != value))
				{
					this.OnScaledPassingScoreChanging(value);
					this.SendPropertyChanging();
					this._ScaledPassingScore = value;
					this.SendPropertyChanged("ScaledPassingScore");
					this.OnScaledPassingScoreChanged();
				}
			}
		}
		
		[Column(Storage="_TimeLimitAction", DbType="Int")]
		public System.Nullable<int> TimeLimitAction
		{
			get
			{
				return this._TimeLimitAction;
			}
			set
			{
				if ((this._TimeLimitAction != value))
				{
					this.OnTimeLimitActionChanging(value);
					this.SendPropertyChanging();
					this._TimeLimitAction = value;
					this.SendPropertyChanged("TimeLimitAction");
					this.OnTimeLimitActionChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_ObjectivesGlobalToSystem", DbType="Bit NOT NULL")]
		public bool ObjectivesGlobalToSystem
		{
			get
			{
				return this._ObjectivesGlobalToSystem;
			}
			set
			{
				if ((this._ObjectivesGlobalToSystem != value))
				{
					this.OnObjectivesGlobalToSystemChanging(value);
					this.SendPropertyChanging();
					this._ObjectivesGlobalToSystem = value;
					this.SendPropertyChanged("ObjectivesGlobalToSystem");
					this.OnObjectivesGlobalToSystemChanged();
				}
			}
		}
		
		[Association(Name="ActivityPackageItem_AssignmentItem", Storage="_AssignmentItems", OtherKey="RootActivityId")]
		public EntitySet<AssignmentItem> AssignmentItems
		{
			get
			{
				return this._AssignmentItems;
			}
			set
			{
				this._AssignmentItems.Assign(value);
			}
		}
		
		[Association(Name="ActivityPackageItem_AttemptItem", Storage="_AttemptItems", OtherKey="CurrentActivityId")]
		public EntitySet<AttemptItem> AttemptItems
		{
			get
			{
				return this._AttemptItems;
			}
			set
			{
				this._AttemptItems.Assign(value);
			}
		}
		
		[Association(Name="ActivityPackageItem_AttemptItem1", Storage="_AttemptItems1", OtherKey="RootActivityId")]
		public EntitySet<AttemptItem> AttemptItems1
		{
			get
			{
				return this._AttemptItems1;
			}
			set
			{
				this._AttemptItems1.Assign(value);
			}
		}
		
		[Association(Name="ActivityPackageItem_AttemptItem2", Storage="_AttemptItems2", OtherKey="SuspendedActivityId")]
		public EntitySet<AttemptItem> AttemptItems2
		{
			get
			{
				return this._AttemptItems2;
			}
			set
			{
				this._AttemptItems2.Assign(value);
			}
		}
		
		[Association(Name="ActivityPackageItem_ActivityAttemptItem", Storage="_ActivityAttemptItems", OtherKey="ActivityPackageId")]
		public EntitySet<ActivityAttemptItem> ActivityAttemptItems
		{
			get
			{
				return this._ActivityAttemptItems;
			}
			set
			{
				this._ActivityAttemptItems.Assign(value);
			}
		}
		
		[Association(Name="ActivityPackageItem_ActivityPackageItem", Storage="_ActivityPackageItems", OtherKey="ParentActivityId")]
		public EntitySet<ActivityPackageItem> ActivityPackageItems
		{
			get
			{
				return this._ActivityPackageItems;
			}
			set
			{
				this._ActivityPackageItems.Assign(value);
			}
		}
		
		[Association(Name="ActivityPackageItem_ActivityPackageItem", Storage="_ActivityPackageItem1", ThisKey="ParentActivityId", IsForeignKey=true)]
		public ActivityPackageItem ActivityPackageItem1
		{
			get
			{
				return this._ActivityPackageItem1.Entity;
			}
			set
			{
				ActivityPackageItem previousValue = this._ActivityPackageItem1.Entity;
				if (((previousValue != value) 
							|| (this._ActivityPackageItem1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityPackageItem1.Entity = null;
						previousValue.ActivityPackageItems.Remove(this);
					}
					this._ActivityPackageItem1.Entity = value;
					if ((value != null))
					{
						value.ActivityPackageItems.Add(this);
						this._ParentActivityId = value.Id;
					}
					else
					{
						this._ParentActivityId = default(Nullable<long>);
					}
					this.SendPropertyChanged("ActivityPackageItem1");
				}
			}
		}
		
		[Association(Name="PackageItem_ActivityPackageItem", Storage="_PackageItem", ThisKey="PackageId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PackageItem PackageItem
		{
			get
			{
				return this._PackageItem.Entity;
			}
			set
			{
				PackageItem previousValue = this._PackageItem.Entity;
				if (((previousValue != value) 
							|| (this._PackageItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackageItem.Entity = null;
						previousValue.ActivityPackageItems.Remove(this);
					}
					this._PackageItem.Entity = value;
					if ((value != null))
					{
						value.ActivityPackageItems.Add(this);
						this._PackageId = value.Id;
					}
					else
					{
						this._PackageId = default(long);
					}
					this.SendPropertyChanged("PackageItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssignmentItems(AssignmentItem entity)
		{
			this.SendPropertyChanging();
			entity.ActivityPackageItem = this;
		}
		
		private void detach_AssignmentItems(AssignmentItem entity)
		{
			this.SendPropertyChanging();
			entity.ActivityPackageItem = null;
		}
		
		private void attach_AttemptItems(AttemptItem entity)
		{
			this.SendPropertyChanging();
			entity.ActivityPackageItem = this;
		}
		
		private void detach_AttemptItems(AttemptItem entity)
		{
			this.SendPropertyChanging();
			entity.ActivityPackageItem = null;
		}
		
		private void attach_AttemptItems1(AttemptItem entity)
		{
			this.SendPropertyChanging();
			entity.ActivityPackageItem1 = this;
		}
		
		private void detach_AttemptItems1(AttemptItem entity)
		{
			this.SendPropertyChanging();
			entity.ActivityPackageItem1 = null;
		}
		
		private void attach_AttemptItems2(AttemptItem entity)
		{
			this.SendPropertyChanging();
			entity.ActivityPackageItem2 = this;
		}
		
		private void detach_AttemptItems2(AttemptItem entity)
		{
			this.SendPropertyChanging();
			entity.ActivityPackageItem2 = null;
		}
		
		private void attach_ActivityAttemptItems(ActivityAttemptItem entity)
		{
			this.SendPropertyChanging();
			entity.ActivityPackageItem = this;
		}
		
		private void detach_ActivityAttemptItems(ActivityAttemptItem entity)
		{
			this.SendPropertyChanging();
			entity.ActivityPackageItem = null;
		}
		
		private void attach_ActivityPackageItems(ActivityPackageItem entity)
		{
			this.SendPropertyChanging();
			entity.ActivityPackageItem1 = this;
		}
		
		private void detach_ActivityPackageItems(ActivityPackageItem entity)
		{
			this.SendPropertyChanging();
			entity.ActivityPackageItem1 = null;
		}
	}
	
	[Table(Name="dbo.PackageItem")]
	public partial class PackageItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _PackageFormat;
		
		private string _Location;
		
		private System.Xml.Linq.XElement _Manifest;
		
		private System.Xml.Linq.XElement _Warnings;
		
		private EntitySet<AttemptItem> _AttemptItems;
		
		private EntitySet<ActivityPackageItem> _ActivityPackageItems;
		
		private EntityRef<PackageFormat> _PackageFormat1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPackageFormatChanging(int value);
    partial void OnPackageFormatChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnManifestChanging(System.Xml.Linq.XElement value);
    partial void OnManifestChanged();
    partial void OnWarningsChanging(System.Xml.Linq.XElement value);
    partial void OnWarningsChanged();
    #endregion
		
		public PackageItem()
		{
			this._AttemptItems = new EntitySet<AttemptItem>(new Action<AttemptItem>(this.attach_AttemptItems), new Action<AttemptItem>(this.detach_AttemptItems));
			this._ActivityPackageItems = new EntitySet<ActivityPackageItem>(new Action<ActivityPackageItem>(this.attach_ActivityPackageItems), new Action<ActivityPackageItem>(this.detach_ActivityPackageItems));
			this._PackageFormat1 = default(EntityRef<PackageFormat>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_PackageFormat", DbType="Int NOT NULL")]
		public int PackageFormat
		{
			get
			{
				return this._PackageFormat;
			}
			set
			{
				if ((this._PackageFormat != value))
				{
					if (this._PackageFormat1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageFormatChanging(value);
					this.SendPropertyChanging();
					this._PackageFormat = value;
					this.SendPropertyChanged("PackageFormat");
					this.OnPackageFormatChanged();
				}
			}
		}
		
		[Column(Storage="_Location", DbType="NVarChar(260) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[Column(Storage="_Manifest", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement Manifest
		{
			get
			{
				return this._Manifest;
			}
			set
			{
				if ((this._Manifest != value))
				{
					this.OnManifestChanging(value);
					this.SendPropertyChanging();
					this._Manifest = value;
					this.SendPropertyChanged("Manifest");
					this.OnManifestChanged();
				}
			}
		}
		
		[Column(Storage="_Warnings", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement Warnings
		{
			get
			{
				return this._Warnings;
			}
			set
			{
				if ((this._Warnings != value))
				{
					this.OnWarningsChanging(value);
					this.SendPropertyChanging();
					this._Warnings = value;
					this.SendPropertyChanged("Warnings");
					this.OnWarningsChanged();
				}
			}
		}
		
		[Association(Name="PackageItem_AttemptItem", Storage="_AttemptItems", OtherKey="PackageId")]
		public EntitySet<AttemptItem> AttemptItems
		{
			get
			{
				return this._AttemptItems;
			}
			set
			{
				this._AttemptItems.Assign(value);
			}
		}
		
		[Association(Name="PackageItem_ActivityPackageItem", Storage="_ActivityPackageItems", OtherKey="PackageId")]
		public EntitySet<ActivityPackageItem> ActivityPackageItems
		{
			get
			{
				return this._ActivityPackageItems;
			}
			set
			{
				this._ActivityPackageItems.Assign(value);
			}
		}
		
		[Association(Name="PackageFormat_PackageItem", Storage="_PackageFormat1", ThisKey="PackageFormat", IsForeignKey=true)]
		public PackageFormat PackageFormat1
		{
			get
			{
				return this._PackageFormat1.Entity;
			}
			set
			{
				PackageFormat previousValue = this._PackageFormat1.Entity;
				if (((previousValue != value) 
							|| (this._PackageFormat1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackageFormat1.Entity = null;
						previousValue.PackageItems.Remove(this);
					}
					this._PackageFormat1.Entity = value;
					if ((value != null))
					{
						value.PackageItems.Add(this);
						this._PackageFormat = value.Id;
					}
					else
					{
						this._PackageFormat = default(int);
					}
					this.SendPropertyChanged("PackageFormat1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AttemptItems(AttemptItem entity)
		{
			this.SendPropertyChanging();
			entity.PackageItem = this;
		}
		
		private void detach_AttemptItems(AttemptItem entity)
		{
			this.SendPropertyChanging();
			entity.PackageItem = null;
		}
		
		private void attach_ActivityPackageItems(ActivityPackageItem entity)
		{
			this.SendPropertyChanging();
			entity.PackageItem = this;
		}
		
		private void detach_ActivityPackageItems(ActivityPackageItem entity)
		{
			this.SendPropertyChanging();
			entity.PackageItem = null;
		}
	}
	
	[Table(Name="dbo.PackageFormat")]
	public partial class PackageFormat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<PackageItem> _PackageItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public PackageFormat()
		{
			this._PackageItems = new EntitySet<PackageItem>(new Action<PackageItem>(this.attach_PackageItems), new Action<PackageItem>(this.detach_PackageItems));
			OnCreated();
		}
		
		[Column(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(63) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Association(Name="PackageFormat_PackageItem", Storage="_PackageItems", OtherKey="PackageFormat")]
		public EntitySet<PackageItem> PackageItems
		{
			get
			{
				return this._PackageItems;
			}
			set
			{
				this._PackageItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PackageItems(PackageItem entity)
		{
			this.SendPropertyChanging();
			entity.PackageFormat1 = this;
		}
		
		private void detach_PackageItems(PackageItem entity)
		{
			this.SendPropertyChanging();
			entity.PackageFormat1 = null;
		}
	}
	
	[Table(Name="dbo.LearnerAssignmentItem")]
	public partial class LearnerAssignmentItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<System.Guid> _GuidId;
		
		private long _AssignmentId;
		
		private long _LearnerId;
		
		private bool _IsFinal;
		
		private System.Nullable<int> _NonELearningStatus;
		
		private System.Nullable<float> _FinalPoints;
		
		private string _InstructorComments;
		
		private EntitySet<AttemptItem> _AttemptItems;
		
		private EntityRef<AssignmentItem> _AssignmentItem;
		
		private EntityRef<UserItem> _UserItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnGuidIdChanging(System.Nullable<System.Guid> value);
    partial void OnGuidIdChanged();
    partial void OnAssignmentIdChanging(long value);
    partial void OnAssignmentIdChanged();
    partial void OnLearnerIdChanging(long value);
    partial void OnLearnerIdChanged();
    partial void OnIsFinalChanging(bool value);
    partial void OnIsFinalChanged();
    partial void OnNonELearningStatusChanging(System.Nullable<int> value);
    partial void OnNonELearningStatusChanged();
    partial void OnFinalPointsChanging(System.Nullable<float> value);
    partial void OnFinalPointsChanged();
    partial void OnInstructorCommentsChanging(string value);
    partial void OnInstructorCommentsChanged();
    #endregion
		
		public LearnerAssignmentItem()
		{
			this._AttemptItems = new EntitySet<AttemptItem>(new Action<AttemptItem>(this.attach_AttemptItems), new Action<AttemptItem>(this.detach_AttemptItems));
			this._AssignmentItem = default(EntityRef<AssignmentItem>);
			this._UserItem = default(EntityRef<UserItem>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_GuidId", DbType="UniqueIdentifier", IsDbGenerated=true)]
		public System.Nullable<System.Guid> GuidId
		{
			get
			{
				return this._GuidId;
			}
			set
			{
				if ((this._GuidId != value))
				{
					this.OnGuidIdChanging(value);
					this.SendPropertyChanging();
					this._GuidId = value;
					this.SendPropertyChanged("GuidId");
					this.OnGuidIdChanged();
				}
			}
		}
		
		[Column(Storage="_AssignmentId", DbType="BigInt NOT NULL")]
		public long AssignmentId
		{
			get
			{
				return this._AssignmentId;
			}
			set
			{
				if ((this._AssignmentId != value))
				{
					if (this._AssignmentItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssignmentIdChanging(value);
					this.SendPropertyChanging();
					this._AssignmentId = value;
					this.SendPropertyChanged("AssignmentId");
					this.OnAssignmentIdChanged();
				}
			}
		}
		
		[Column(Storage="_LearnerId", DbType="BigInt NOT NULL")]
		public long LearnerId
		{
			get
			{
				return this._LearnerId;
			}
			set
			{
				if ((this._LearnerId != value))
				{
					if (this._UserItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLearnerIdChanging(value);
					this.SendPropertyChanging();
					this._LearnerId = value;
					this.SendPropertyChanged("LearnerId");
					this.OnLearnerIdChanged();
				}
			}
		}
		
		[Column(Storage="_IsFinal", DbType="Bit NOT NULL")]
		public bool IsFinal
		{
			get
			{
				return this._IsFinal;
			}
			set
			{
				if ((this._IsFinal != value))
				{
					this.OnIsFinalChanging(value);
					this.SendPropertyChanging();
					this._IsFinal = value;
					this.SendPropertyChanged("IsFinal");
					this.OnIsFinalChanged();
				}
			}
		}
		
		[Column(Storage="_NonELearningStatus", DbType="Int")]
		public System.Nullable<int> NonELearningStatus
		{
			get
			{
				return this._NonELearningStatus;
			}
			set
			{
				if ((this._NonELearningStatus != value))
				{
					this.OnNonELearningStatusChanging(value);
					this.SendPropertyChanging();
					this._NonELearningStatus = value;
					this.SendPropertyChanged("NonELearningStatus");
					this.OnNonELearningStatusChanged();
				}
			}
		}
		
		[Column(Storage="_FinalPoints", DbType="Real")]
		public System.Nullable<float> FinalPoints
		{
			get
			{
				return this._FinalPoints;
			}
			set
			{
				if ((this._FinalPoints != value))
				{
					this.OnFinalPointsChanging(value);
					this.SendPropertyChanging();
					this._FinalPoints = value;
					this.SendPropertyChanged("FinalPoints");
					this.OnFinalPointsChanged();
				}
			}
		}
		
		[Column(Storage="_InstructorComments", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string InstructorComments
		{
			get
			{
				return this._InstructorComments;
			}
			set
			{
				if ((this._InstructorComments != value))
				{
					this.OnInstructorCommentsChanging(value);
					this.SendPropertyChanging();
					this._InstructorComments = value;
					this.SendPropertyChanged("InstructorComments");
					this.OnInstructorCommentsChanged();
				}
			}
		}
		
		[Association(Name="LearnerAssignmentItem1_AttemptItem", Storage="_AttemptItems", OtherKey="LearnerAssignmentId")]
		public EntitySet<AttemptItem> AttemptItems
		{
			get
			{
				return this._AttemptItems;
			}
			set
			{
				this._AttemptItems.Assign(value);
			}
		}
		
		[Association(Name="AssignmentItem_LearnerAssignmentItem1", Storage="_AssignmentItem", ThisKey="AssignmentId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AssignmentItem AssignmentItem
		{
			get
			{
				return this._AssignmentItem.Entity;
			}
			set
			{
				AssignmentItem previousValue = this._AssignmentItem.Entity;
				if (((previousValue != value) 
							|| (this._AssignmentItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AssignmentItem.Entity = null;
						previousValue.LearnerAssignmentItems.Remove(this);
					}
					this._AssignmentItem.Entity = value;
					if ((value != null))
					{
						value.LearnerAssignmentItems.Add(this);
						this._AssignmentId = value.Id;
					}
					else
					{
						this._AssignmentId = default(long);
					}
					this.SendPropertyChanged("AssignmentItem");
				}
			}
		}
		
		[Association(Name="UserItem_LearnerAssignmentItem1", Storage="_UserItem", ThisKey="LearnerId", IsForeignKey=true)]
		public UserItem UserItem
		{
			get
			{
				return this._UserItem.Entity;
			}
			set
			{
				UserItem previousValue = this._UserItem.Entity;
				if (((previousValue != value) 
							|| (this._UserItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserItem.Entity = null;
						previousValue.LearnerAssignmentItems.Remove(this);
					}
					this._UserItem.Entity = value;
					if ((value != null))
					{
						value.LearnerAssignmentItems.Add(this);
						this._LearnerId = value.Id;
					}
					else
					{
						this._LearnerId = default(long);
					}
					this.SendPropertyChanged("UserItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AttemptItems(AttemptItem entity)
		{
			this.SendPropertyChanging();
			entity.LearnerAssignmentItem = this;
		}
		
		private void detach_AttemptItems(AttemptItem entity)
		{
			this.SendPropertyChanging();
			entity.LearnerAssignmentItem = null;
		}
	}
}
#pragma warning restore 1591
